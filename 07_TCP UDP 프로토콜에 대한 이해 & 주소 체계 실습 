[IP 프로토콜 동작]

Ver 
	=> version이 4버전인지 6버전인지
Protocol 
	=> TCP 데이터인지 UDP데이터인지
TTL (Time To Live) 
	=> 패킷이 통신망 내에서 계속 돌아다니는 것을 방지하기 위해 사용
	=> 보통 hop counter 값을 사용


Maximum Transmission Unit(MTU)
	=> 통신망이 한번에 전달할 수 있는 패킷의 최대 크기 (1500 bytes)
	=> 재전송 할 Size를 줄이기 위해 패킷을 잘라서 보냄


[TCP 헤더]
	=> 20-60 bytes의 비고정 헤더

Sequence Number 
	=> 송신 데이터의 순서 번호 (바이트 단위) 

Ack Number
	=> 수신한 데이터의 순서 번호+1 (다음에 받고자 하는 순서 번호)

-> Sequence Number와 Ack Number 를 통해 Error Control(오류제어)을 수행

Window
	=> 흐름 제어용 윈도우 크기(바이트 단위)
	=> 에러가 없으면 보내는 패킷의 양을 점점 늘려가다가 에러 발생 시 다시 1부터 시작
	ex) 1 -> 2 -> 4 -> 8 -> 16 -> 16 -> (error) -> 1 -> 2 -> 4 -> ....

(TCP가 UDP에 비해 뚜렷한 두 가지 제어하는 것)
	=> TCP는 오류제어와 흐름제어 기능도 수행한다.					  
	=> Sequence Number와 Ack Number를 통해 오류제어 수행
	=> Window를 통해 흐름제어 수행	



[트랜스포트 계층]
TCP : 연결형 서비스
	=> 오류제어, 흐름제어
	=> 신뢰성 있는 통신이 필요할 때, 데이터의 순서 보장이 필요할 때 사용

TCP : 3-way handshake 사용
	=> 연결 요청에 대하여 상대방도 확인 및 새로운 연결 요청 후
	처음 연결 요구측에서도 확인을 보내야 연결됨


[Port number]

Well-known port
	=> 주고 1~1023까지 해당
	=> 서버의 반영구적인 port









